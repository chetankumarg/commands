-----------**********--------------------

commands to create laravel project or instance

composer create-project laravel/laravel folder-name 

---------------****-------------------------

commands to start the laravel existing project 

php artisan serve

---------------****-------------------------

commands to create model of table brands -migrate

php artisan make:model brands -m


command: after creating the model migrate
php artisan migrate

command: to migrate fresh , migrate all the model files starting from scratch 

php artisan migrate fresh

---------------****-------------------------

Laravel commands for the rename of the tables though migrate
composer require doctrine/dbal


---------************--------------------

Commands for the migration part , from other instance

php artisan migrate --path="../jlr/database/migrations"

---***---------
Commands for the migration part , from other instance rollback.

 php artisan migrate:rollback --path="../jlr/database/migrations"


 ---------***---------------
Create a controller called MyController by executing the following command.
 php artisan make:controller MyController

 -------****-------

 Artisan is the command line interface included with Laravel. Artisan exists at the root of your application as the artisan script and provides a number of helpful commands that can assist you while you build your application. To view a list of all available Artisan commands, you may use the list command:

 php artisan list


 -----------**********------------------------

 To know ubuntu version , commands:

 lsb_release -a

 ---------------------*****---------------------


 php artisan config:clear
php artisan cache:clear


----***---------------

Laravel php artisan tinker for the commands to create data to the database..

php artisan tinker

Command 	Description 	Alias
help 	Show a list of commands. Type help [foo] for information about [foo]. 	?
ls 	List local, instance or class variables, methods and constants. 	list, dir
dump 	Dump an object or primitive. 	
doc 	Read the documentation for an object, class, constant, method or property. 	rtfm, man
show 	Show the code for an object, class, constant, method or property. 	
wtf 	Show the backtrace of the most recent exception. 	last-exception, wtf?
whereami 	Show where you are in the code. 	
trace 	Show the current call stack. 	
throw-up 	Throw an exception out of the Psy Shell. 	
buffer 	Show (or clear) the contents of the code input buffer. 	buf
clear 	Clear the Psy Shell screen. 	
history 	Show the Psy Shell history. 	hist
exit 	End the current session and return to caller. 	quit, q
clear-compiled 	Remove the compiled class file. 	
down 	Put the application into maintenance mode. 	
env 	Display the current framework environment. 	
optimize 	Optimize the framework for better performance. 	
up 	Bring the application out of maintenance mode. 	
migrate 	Run the database migrations. 	
inspire 	Display an inspiring quote. 	

------**----------
php artisan tinker
 DB::table('followers')->insert(['user_id'=>5, 'follower_id'=>12]);
 
 DB::table('reviews')->insert(['name'=>'My Iphone11', 'hashtags' =>'#iphone1','mobile_user_id' =>1, 'description'=> 'My Iphone11 with gud features','rating'=> 5,'categorie_id'=>1,'publish'=>1,'image' =>'','lat'=>'12.949691','long' => '77.777881','created_at'=> new DateTime(),'updated_at'=> new DateTime()]);

DB::table('reviews')->insert(['name'=>'My biki12', 'hashtags' =>'#bikei','mobile_user_id' =>1, 'description'=> 'My bikei with gud features','rating'=> 5,'categorie_id'=>1,'publish'=>1,'image' =>'','lat'=>'12.949691','long' => '77.777881','created_at'=> new DateTime(),'updated_at'=> new DateTime()]);


DB::table('reviews')->insert(['name'=>'My Carid', 'hashtags' =>'#cari','mobile_user_id' =>1, 'description'=> 'My cari with gud features','rating'=> 5,'categorie_id'=>1,'publish'=>1,'image' =>'','lat'=>'12.949691','long' => '77.777881','created_at'=> new DateTime(),'updated_at'=> new DateTime()]);


DB::table('categories')->insert(['name'=>'Mobiles','image' => '','created_at'=> new DateTime(),'updated_at'=> new DateTime()]);
DB::table('categories')->insert(['name'=>'Cars','image' => '','created_at'=> new DateTime(),'updated_at'=> new DateTime()]);
DB::table('categories')->insert(['name'=>'Bikes','image' => '','created_at'=> new DateTime(),'updated_at'=> new DateTime()]);

DB::table('trendings')->insert(['review_id'=>1,'active'=> 1,'created_at'=> new DateTime(),'updated_at'=> new DateTime()]);
DB::table('trendings')->insert(['review_id'=>2,'active'=> 0,'created_at'=> new DateTime(),'updated_at'=> new DateTime()]);
DB::table('trendings')->insert(['review_id'=>3,'active'=> 1,'created_at'=> new DateTime(),'updated_at'=> new DateTime()]);
